= form_for @payment do |f|

  %fieldset
    %legend= 'Supplier Payment: ' + @supplier.name
    = f.hidden_field :payable_type
    = f.hidden_field :payable_id
    = f.hidden_field :account_id
    = f.hidden_field :state
    = f.hidden_field :amount_currency
    = f.hidden_field :exchange_rate
    = f.text_field :home_amount
    .row
      .field.small-3.columns
        = f.label :payment_date
        = f.date_field :payment_date

      .field.small-3.columns.left
        = f.label :amount
        = f.text_field :amount

      .field.small-3.columns.left
        = f.label :bank_id, 'Bank'
        = f.collection_select :bank_id, @banks, 'id', 'name'

    #allocations
      .row.line-items
        .field.small-10.columns
          - unless @orders.size == 0
            = render partial: 'order', collection: @orders
          -else
            No outstanding orders on system
  .actions
    = f.submit 'Save'

:coffeescript
  jQuery ->
    Account=
      updateTotal: ->
        amount = 0
        $('input.allocation').each ->
          allocation = parseFloat($(this).val())
          if $.isNumeric(allocation)
            amount += allocation
          else
            $(this).val('0')
        $('input#payment_amount').val(amount.toFixed(2))
        exchange_rate = $('input#payment_exchange_rate').val()
        $('input#payment_home_amount').val((amount/exchange_rate).toFixed(2))
    $('div#allocations').on 'change', 'input.allocate', ->
      order = $(this).parent().parent()
      due = order.find('span.due').html().replace(/[^0-9\.]+/g,"")
      order.find('input.allocation').val(due)
      Account.updateTotal()
    $('div#allocations').on 'change', 'input.allocation', ->
      Account.updateTotal()
