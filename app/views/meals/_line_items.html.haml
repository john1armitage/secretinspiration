- @takeaway_editable = (!current_user.id.blank? or (['takeaway','requested'].include? @meal.state ))
- if @meal.line_items.empty?
  %li.center
    %span.title
      Select from Menu
-else
  %li.total
    - total = (@meal.line_items.sum(:net_home_cents).to_d + @meal.line_items.sum(:tax_home_cents).to_d) / 100
    %table
      %tr
        %td
          %span
            Total
        %td.right
          %span
            != humanized_money_with_symbol(total)
        - if @meal.seating_id.blank? && total > CONFIG[:takeaway_threshold].to_d
          - discount = total * CONFIG[:takeaway_discount].to_d
          %tr
            %td
              %span
                Discount
            %td.right
              %span
                != humanized_money_with_symbol(discount)
          %tr
            %td
              %span.title
                To Pay
            %td.right
              %span.title
                != humanized_money_with_symbol((total - discount))

  - @course = ''
  = render partial: 'meals/line_item', collection: @meal.line_items.joins( {:variant => :item } ).order('items.grouping, items.rank, line_items.desc')
  - if (allow? :orders, :create)  && !@meal.seating_id.blank?
    = render partial: 'meals/offers'
  - order = ((@meal.state == 'ordered') ? 'Re-order' : 'Order')
  - if (allow? :meals, :form) && (!@meal.seating_id.blank? || (['confirmed','ordered'].include? @meal.state ))
    = button_to order, meal_path(@meal, order: 'all'), method: :get  #, remote: true, form_class: 'no_ajaxify'
    - unless @meal.seating_id.blank?
      = button_to 'Desserts', meal_path(@meal, order: 'dessert'), method: :get  #, remote: true, form_class: 'no_ajaxify'
    - if @meal.seating_id.blank?
      = button_to 'Bill', check_out_meal_path(@meal,meal_id: @meal.id, bill: true, takeaway: true), id: 'meal_bill', method: 'post', remote: true, form_class: 'no_ajaxify', title: 'Create Bill' #, data: {confirm: 'Create Bill?'}  #, remote: true, form_class: 'no_ajaxify'
    - if @meal.seating_id.blank?
      = button_to 'Un-order', meal_path(@meal, takeaway: 'cancel'), method: :get, remote: true, form_class: 'no_ajaxify', data: {confirm: 'Cancel Order?'}
  - elsif @meal.state == 'takeaway'
    - if !@meal.contact.blank? && (@meal.contact.size >= 2) && !@meal.phone.blank? && (@meal.phone.gsub(/[^\d]/, '').size >= 6)
      = button_to 'Request', meal_path(@meal, takeaway: 'request'), method: :get, form_class: 'contact no_ajaxify'
      = form_for @meal, url: {action: "patcher", takeaway: 'request'}, html: { class: 'no_ajaxify'}, method: 'post', remote: true, validate: true do |f|
        .row
          .large-12.columns
            = f.submit 'Send Request'

    - else
      .row
        .large-12.columns
          %p
            %span.title
            Contact Details Required
  - elsif @meal.state == 'requested'
    - unless current_user.id.blank?
      = button_to 'Confirm', meal_path(@meal, takeaway: 'confirm'), method: :get, remote: true, form_class: 'no_ajaxify'
      = button_to 'Un-order', meal_path(@meal, takeaway: 'cancel'), method: :get, remote: true, form_class: 'no_ajaxify', data: {confirm: 'Cancel Order?'}
      -#= button_to 'Request', meal_path(@meal, order: 'request'), method: :get, form_class: 'contact'
    =# button_to 'Un-order', meal_path(@meal, takeaway: 'cancel'), method: :get, remote: true, form_class: 'no_ajaxify', data: {confirm: 'Cancel Order?'}
  - elsif ['confirmed','ordered'].include? @meal.state #@meal.state == 'confirmed'
    - unless current_user.id.blank?
      = button_to order, meal_path(@meal, order: 'all'), method: :get  #, remote: true, form_class: 'no_ajaxify'
      = button_to 'Desserts', meal_path(@meal, order: 'dessert'), method: :get  #, remote: true, form_class: 'no_ajaxify'
      -# params = "@meal, meal_id: @meal.id, bill: true, test: true"
      = button_to 'Bill', check_out_meal_path(@meal,meal_id: @meal.id, bill: true), method: 'post', data: {confirm: 'Create Bill?'}, remote: true, form_class: 'no_ajaxify', title: 'Create Bill'  #, remote: true, form_class: 'no_ajaxify'
  - unless @meal.seating_id.blank? && @meal.state != 'takeaway'
    = button_to 'Clear Order', clear_meal_path( @meal), method: :delete, remote: true, form_class: 'no_ajaxify',
    data: { confirm: 'Clear Items?' }
