- orders = Order.where(state: 'incomplete').order('id DESC')
- paid_orders = Order.where('state = ? and created_at > ?', 'complete', (Time.now - 12.hours)).order('created_at DESC')

- unless orders.empty?
  %ul#current.aside.no-print
    %li.title
      %span
        Current Bills
    = render :partial => "orders/#{current_tenant.domain}/current_order", collection: orders
    %li.sub.head
      %span
        - due = orders.to_a.map(&:net_home).reduce(:+) + orders.to_a.map(&:tax_home).reduce(:+)
        = "#{pounds(due)}"
- unless paid_orders.empty?
  %ul#completed.aside.no-print
    %li.title
      %span
        Paid Bills
    = render :partial => "orders/#{current_tenant.domain}/current_order", collection: paid_orders
    %li.sub.head
      - paid = paid_orders.to_a.map(&:paid).reduce(:+)
      - tips = paid_orders.to_a.map(&:tip).reduce(:+)
      - net = paid_orders.to_a.map(&:net_home).reduce(:+)
      - tax = paid_orders.to_a.map(&:tax_home).reduce(:+)
      - card = paid_orders.to_a.map(&:credit_card).reduce(:+)
      - take = paid + tips
      %p
        %span.title
          = "Take: #{pounds(take)}"
      %p
        %span
          = " = #{pounds(net)} +  #{pounds(tax)} + #{pounds(tips)}"
      %p
        %span
          = " = #{pounds(card)}cc + #{pounds(paid + tips - card)}"
